# AI Content Generation Platform - Environment Configuration
# 
# IMPORTANT: This is a generic template. For easier setup, use one of the 
# provider-specific templates instead:
#
# - .env.azure.example     → For Azure OpenAI
# - .env.openrouter.example → For OpenRouter 
# - .env.custom.example    → For custom/third-party providers
#
# Copy the appropriate template to .env and configure your settings.

# =============================================================================
# AI PROVIDER CONFIGURATION
# =============================================================================
# Choose one: azure, openrouter, custom
LLM_PROVIDER=azure

# =============================================================================
# AZURE OPENAI (if LLM_PROVIDER=azure)
# =============================================================================
AZURE_OPENAI_API_KEY=your_azure_api_key_here
AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com/
AZURE_OPENAI_DEPLOYMENT_NAME=gpt-4
AZURE_OPENAI_API_VERSION=2024-02-15-preview

# =============================================================================
# OPENROUTER (if LLM_PROVIDER=openrouter)
# =============================================================================
OPENROUTER_API_KEY=your_openrouter_api_key_here
OPENROUTER_MODEL=openai/gpt-4-turbo-preview
OPENROUTER_SITE_URL=http://localhost:8000
OPENROUTER_APP_NAME=AI Content Platform

# =============================================================================
# CUSTOM PROVIDER (if LLM_PROVIDER=custom)
# =============================================================================
CUSTOM_API_KEY=your_custom_api_key_here
CUSTOM_API_BASE_URL=https://api.your-provider.com/v1
CUSTOM_MODEL=your-model-name
CUSTOM_PROVIDER_NAME=Custom Provider
CUSTOM_API_TYPE=openai
CUSTOM_HEADERS={}

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================
DEBUG_MODE=false
LOG_LEVEL=INFO
DATABASE_URL=sqlite:///./stories.db

# =============================================================================
# API SETTINGS
# =============================================================================
OPENAI_TIMEOUT=120
MAX_TOKENS=1000
TEMPERATURE=0.7

# =============================================================================
# SECURITY SETTINGS
# =============================================================================
CORS_ORIGINS=["http://localhost:8000","http://127.0.0.1:8000"]
MAX_REQUEST_SIZE=1048576

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
LOG_FILE_PATH=logs/app.log
LOG_ROTATION_HOURS=1
LOG_RETENTION_DAYS=7

# =============================================================================
# QUICK START GUIDE
# =============================================================================
# 1. Choose your AI provider:
#    - Azure OpenAI: Enterprise, secure, requires Azure subscription
#    - OpenRouter: Multi-model access, pay-per-use, easy setup
#    - Custom: Local or third-party OpenAI-compatible APIs
#
# 2. Copy the appropriate template:
#    cp .env.azure.example .env       # For Azure OpenAI
#    cp .env.openrouter.example .env  # For OpenRouter
#    cp .env.custom.example .env      # For custom providers
#
# 3. Edit .env with your provider details
# 4. Start the application: python main.py